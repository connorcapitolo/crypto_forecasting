version: "3.8"
services:
    # we have two services here, jordandb-client and jordandb-server
    # this client depends on the server
    crypbrosdb-client:
        # source: https://github.com/amacneil/dbmate#postgresql
        # Dbmate is a database migration tool, to keep your database schema in sync across multiple developers and your production servers
        # keeps track of migrations, and runs it in an order; the power of dbmate is to manage migrations of the script; Shivas uses DataGrip to manage; “dbmate rollback” removes stuff; “dbmate up” creates the table; When we run this “sh ./docker-shell.sh”, I can get the same database setup as Shivas on his end
        image: amacneil/dbmate
        container_name: crypbrosdb-client
        entrypoint: /bin/sh
        depends_on:
            - crypbrosdb-server
        # source: https://docs.docker.com/storage/volumes/
        # Volumes are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure and OS of the host machine, volumes are completely managed by Docker
        volumes:
            - ./db:/db
        environment: 
            DATABASE_URL: "postgres://cryp:bros@crypbrosdb-server:5436/crypbrosdb?sslmode=disable"
    crypbrosdb-server:
        # The database is for the metadata (e.g. when a model predicts, keep track of the prediction results)
        image: postgres
        container_name: crypbrosdb-server
        # we are creating the database (/var/lib/postgresql/data), and that will be mounted to our local machine so that we have access to it, inside the database-server/docker-volumes/postgres folder
        # this is where we're saving the data!
        # source is docker-volumes/postgres (which is on local machine) mapped to the destination on the Docker container (/var/lib/postgresql/data)
        volumes:
            - ./docker-volumes/postgres:/var/lib/postgresql/data
        ports:
            - 5436:5436
        environment:
            POSTGRES_USER: cryp
            POSTGRES_PASSWORD: bros
            POSTGRES_DB: crypbrosdb
        command: -p 5436
networks:
    default:
        external:
            name: crypbros
